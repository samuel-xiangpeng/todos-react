{"version":3,"sources":["actions/index.js","components/Header.js","containers/HeaderC.js","components/Todo.js","components/TodoList.js","containers/TodoListC.js","components/Slide.js","containers/SlideC.js","components/Popup.js","containers/PopupC.js","components/App.js","reducers/todos.js","reducers/toggleShowFILTER.js","reducers/theme.js","reducers/togglePopup.js","reducers/index.js","index.js"],"names":["item","connect","props","dispatch","inputRef","useRef","onSubmit","useCallback","value","current","id","type","todoMessage","className","ref","onKeyUp","e","keyCode","placeholder","onClick","Headers","Todo","onclick","completed","toggleTodo","setTogglePopup","classNames","TodoList","todos","delTodo","map","todo","length","split","splice","join","getVisibleTodos","filter","t","state","toggleShowFILTER","isPopup","togglePopup","ownProps","DelTodo","ToggleTodo","Slide","setToggleShowFILTER","data-tip","disabled","Popup","togglePopupStatus","PopupData","console","log","message","data","getPopupData","Object","assign","theme","HeaderC","TodoListC","SlideC","PopupC","defaultState","Todos","action","GlobalTheme","themeNumber","TogglePopup","combineReducers","ToggleShowFILTER","Theme","store","createStore","rootReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.72a9c44f.chunk.js","sourcesContent":["/*\r\n    actionCreator创建\r\n*/\r\nlet item = 0\r\n\r\nexport const addTodo = function (message) {\r\n    return {\r\n        id: item++,\r\n        type: \"ADD_TODO\",\r\n        todoMessage: message\r\n    }\r\n}\r\n\r\nexport const DelTodo = function (id) {\r\n    return {\r\n        id: id,\r\n        type: \"DEL_TODO\"\r\n    }\r\n}\r\n\r\nexport const ToggleTodo = function (id) {\r\n    return {\r\n        id: id,\r\n        type: \"TOGGLE_TODO\"\r\n    }\r\n}\r\n\r\nexport const setToggleShowFILTER = function (filter) {\r\n    return {\r\n        type: \"SET_SHOW_FILTER\",\r\n        filter\r\n    }\r\n}\r\n\r\n\r\nexport const setTogglePopup = function (id) {\r\n    return {\r\n        type: \"SET_POPUP\",\r\n        id\r\n    }\r\n}\r\n\r\nexport const togglePopupStatus = function (id) {\r\n    return {\r\n        type: \"TOGGLE_POPUP_STATUS\",\r\n    }\r\n}\r\n\r\n\r\n//产生随机数字，对应主题数组\r\nexport const randomThemeNumber = function(){\r\n    return {\r\n        type:\"SET_GLOBAL_THEME\",\r\n        themeNumber: Math.floor(Math.random()*100)\r\n    }\r\n}","import React, { useRef, useCallback } from 'react'\r\nimport './styles/Header.css'\r\nimport { connect } from 'react-redux'\r\nimport { addTodo } from '../actions/'\r\nconst Header = (props) => {\r\n    const { dispatch } = props\r\n    const inputRef = useRef()\r\n\r\n    const onSubmit = useCallback(() => {\r\n        let value = inputRef.current.value\r\n        if (value === '') {\r\n            return\r\n        }\r\n        dispatch(addTodo(value))\r\n        inputRef.current.value = ''\r\n    }, [dispatch])\r\n\r\n    const onKeyUp = function (e) {\r\n        // console.log(e.keyCode)\r\n        if(e.keyCode === 13){\r\n            onSubmit()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='todos-header'>\r\n            <input ref={ inputRef } onKeyUp={ onKeyUp } className='todos-input' placeholder='请输入你的待办事项' />\r\n            <button className='todos-input-btn' onClick={ onSubmit }>Add</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect()(Header)","import Header from '../components/Header'\r\nimport React from 'react'\r\n\r\nconst Headers = function () {\r\n    return <Header />\r\n}\r\nexport default Headers","import React from 'react'\r\nimport classNames from 'classnames'\r\nconst Todo = function (props) {\r\n    const { onclick, completed,toggleTodo,setTogglePopup,todoMessage } = props\r\n    return (\r\n        <li>\r\n            <i className='iconfont icon-001-man' />\r\n            <span className='btn-controls'>\r\n                <i className={ classNames({\r\n                    \"btn iconfont\": true,\r\n                    \"icon-lujing\": completed,\r\n                    \"icon-weiwancheng\": !completed\r\n                }) } onClick={toggleTodo}/>\r\n                <i onClick={ onclick } className='btn iconfont icon-shanchu' />\r\n            </span>\r\n            <span onClick={setTogglePopup}>{todoMessage}</span>\r\n        </li>)\r\n}\r\nexport default Todo","import React from 'react'\r\nimport './styles/TodoList.css'\r\nimport Todo from './Todo'\r\nconst TodoList = function (props) {\r\n    const { todos, toggleTodo, delTodo ,setTogglePopup} = props\r\n    return (\r\n        <div className='sam-todos-list'>\r\n            <ul className='todos-list'>\r\n                {\r\n                    todos ? todos.map((todo) => {\r\n                        let todoMessage = todo.todoMessage\r\n                        if(todoMessage && todoMessage.length > 23){\r\n                            todoMessage = todoMessage.split(\"\").splice(0,23).join(\"\") + '...'\r\n                        }\r\n                        \r\n                        return <Todo key={ todo.id } setTogglePopup={()=>{setTogglePopup(todo.id)}} toggleTodo={ () => { toggleTodo(todo.id) } } onclick={ () => { delTodo(todo.id) } } { ...todo }></Todo>\r\n                    }) : null\r\n                }\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList","import TodoList from '../components/TodoList'\r\nimport { connect } from 'react-redux'\r\nimport { DelTodo, ToggleTodo,setTogglePopup } from '../actions'\r\n\r\n\r\n//下面这个函数对列表进行过滤\r\nconst getVisibleTodos = (todos, filter) => {\r\n    switch (filter) {\r\n        case 'SHOW_COMPLETED':\r\n            return todos.filter((t) => {\r\n                return t.completed\r\n            })\r\n        case 'SHOW_UNCOMPLETED':\r\n            return todos.filter((t) => {\r\n                return !t.completed\r\n            })\r\n        case 'SHOW_ALL':\r\n        default:\r\n            return todos\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        todos: getVisibleTodos(state.todos, state.toggleShowFILTER),\r\n        isPopup: state.togglePopup\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = function (dispatch, ownProps) {\r\n    return {\r\n        delTodo: function (id) {\r\n            dispatch(DelTodo(id))\r\n        },\r\n        toggleTodo: function (id) {\r\n            dispatch(ToggleTodo(id))\r\n        },\r\n        setTogglePopup: function (id) {\r\n            dispatch(setTogglePopup(id))\r\n         }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList)","import React from 'react'\r\nimport './styles/Slide.css'\r\nconst Slide = function (props) {\r\n    const { setToggleShowFILTER, state } = props\r\n    let t = state.toggleShowFILTER\r\n    return (\r\n        <div className='todos-slide'>\r\n            <button data-tip='显示全部' disabled={ t === \"SHOW_ALL\" } onClick={ setToggleShowFILTER('SHOW_ALL') } className='btn show-all'><i className='iconfont icon-shituxianshiquanbujiedian'></i></button>\r\n            <button data-tip='显示完成' disabled={ t === \"SHOW_COMPLETED\" } onClick={ setToggleShowFILTER('SHOW_COMPLETED') } className='btn show-complete'><i className='iconfont icon-lujing'></i></button>\r\n            <button data-tip='显示未完成' disabled={ t === \"SHOW_UNCOMPLETED\" } onClick={ setToggleShowFILTER('SHOW_UNCOMPLETED') } className='btn show-uncomplete'><i className='iconfont icon-weiwancheng'></i></button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Slide","import Slide from '../components/Slide'\r\nimport { connect } from 'react-redux'\r\nimport { setToggleShowFILTER } from '../actions'\r\nconst mapStateToProps = function (state) {\r\n    return {\r\n        state\r\n    }\r\n}\r\nconst mapDispatchToProps = function (dispatch) {\r\n    return {\r\n        setToggleShowFILTER: function (filter) {\r\n            return function () {\r\n                dispatch(setToggleShowFILTER(filter))\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Slide)","/*\r\n    弹出框\r\n*/\r\nimport './styles/Popup.css'\r\nconst Popup = function (props) {\r\n    const { togglePopupStatus, PopupData } = props\r\n    console.log(PopupData)\r\n    const message = PopupData.data.todoMessage\r\n    return (\r\n        <div className='todos-popup'>\r\n            <div className='popup-header'>\r\n                <h3>todos-详情</h3>\r\n                <button onClick={ togglePopupStatus } className='popup-close'><i className='iconfont icon-guanbi'></i></button>\r\n            </div>\r\n            <div className='popup-body'>\r\n                <div className='popup-content'>\r\n                    { message }\r\n                </div>\r\n            </div>\r\n            {/* <div className='popup-footer'>\r\n                <button className='btn show-all'><i className='iconfont icon-shituxianshiquanbujiedian'></i></button>\r\n                <button className='btn show-complete'><i className='iconfont icon-lujing'></i></button>\r\n            </div> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Popup","import { connect } from 'react-redux'\r\nimport Popup from '../components/Popup'\r\nimport { togglePopupStatus } from '../actions'\r\n\r\n// 获取popup数据\r\nconst getPopupData = function (state) {\r\n    //获取当前点击的id以及返回当前id的数据\r\n    return {\r\n        data: Object.assign({}, state.todos[state.togglePopup.id])\r\n    }\r\n}\r\n\r\nconst mapStateToProps = function (state) {\r\n    console.log(state)\r\n    return {\r\n        PopupData: getPopupData(state)\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = function (dispatch) {\r\n    return {\r\n        togglePopupStatus: function () {\r\n            dispatch(togglePopupStatus())\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Popup)","import React from 'react'\nimport { connect } from 'react-redux'\nimport './styles/App.css'\nimport HeaderC from '../containers/HeaderC'\nimport TodoListC from '../containers/TodoListC'\nimport SlideC from '../containers/SlideC'\nimport PopupC from '../containers/PopupC'\n\n\nfunction App(props) {\n  const { togglePopup } = props\n  return (\n    <div className=\"App\">\n      <div className='sam-header'>\n        <h1>Todos</h1>\n      </div>\n      <div className='sam-todos'>\n        <HeaderC />\n        <TodoListC />\n        <SlideC />\n      </div>\n      {togglePopup ? <PopupC /> : '' }\n      {/* <button className='randomTheme-btn' data-tip='更改背景颜色'>\n        <i className='iconfont icon-zhuti'></i>\n      </button> */}\n    </div>\n  );\n}\nconst mapStateToProps = function (state) {\n  return {\n    togglePopup: state.togglePopup.togglePopup,\n    theme: state.theme\n  }\n}\n\nexport default connect(mapStateToProps)(App);\n","\r\n/*\r\n    todos列表专栏功能设计 \r\n        1. 增加事项\r\n        2. 删除事项\r\n\r\n*/\r\n\r\nconst defaultState = []\r\n\r\nconst Todos = function (state = defaultState, action) {\r\n    switch (action.type) {\r\n        case \"ADD_TODO\":\r\n            return [\r\n                ...state,\r\n                {\r\n                    todoMessage: action.todoMessage,\r\n                    id: action.id,\r\n                    completed: false\r\n                }\r\n            ]\r\n        case \"DEL_TODO\":\r\n            return state.filter((item) => {\r\n                return item.id !== action.id\r\n            })\r\n        case \"TOGGLE_TODO\":\r\n            return state.map(todo => action.id === todo.id ? { ...todo, completed : !todo.completed } : todo)\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default Todos","\r\n/*\r\n    这个reducer控制todo上的显示\r\n        1. 显示全部 SHOW_ALL\r\n\r\n*/\r\nconst toggleShowFILTER = function (state = \"SHOW_ALL\", action) {\r\n    switch (action.type) {\r\n        case \"SET_SHOW_FILTER\":\r\n            return action.filter //修改了state\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default toggleShowFILTER","const GlobalTheme = function (state = 0, action) {\r\n    switch (action.type) {\r\n        case \"SET_GLOBAL_THEME\":\r\n            return action.themeNumber\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default GlobalTheme","\r\n\r\nconst TogglePopup = function (state = { id: 0, togglePopup: false }, action) {\r\n    switch (action.type) {\r\n        case \"TOGGLE_POPUP_STATUS\":\r\n            return Object.assign({},state,{togglePopup:!state.togglePopup})\r\n        case \"SET_POPUP\":\r\n            return {\r\n                ...state,\r\n                id: action.id,\r\n                togglePopup:!state.togglePopup\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default TogglePopup","import { combineReducers } from 'redux'\r\nimport Todos from './todos'\r\nimport ToggleShowFILTER from './toggleShowFILTER'\r\nimport Theme from './theme'\r\nimport TogglePopup from './togglePopup'\r\n\r\nexport default combineReducers({\r\n    todos: Todos,\r\n    toggleShowFILTER: ToggleShowFILTER,\r\n    theme: Theme,\r\n    togglePopup:TogglePopup,\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport App from './components/App';\nimport rootReducer from './reducers/'\nconst store = createStore(rootReducer)\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={ store }>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}